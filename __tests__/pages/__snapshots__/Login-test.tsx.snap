// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render Login Screen 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      showsVerticalScrollIndicator={false}
      style={
        Object {
          "backgroundColor": "rgba(255, 251, 254, 1)",
          "flex": 1,
          "paddingTop": 30,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "minHeight": 1084,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "paddingHorizontal": 16,
                  "paddingVertical": 22,
                },
                Object {
                  "marginHorizontal": 16,
                  "paddingBottom": 70,
                  "paddingLeft": 0,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingBottom": 22,
                  },
                  undefined,
                ]
              }
            >
              <Image
                onError={[Function]}
                resizeMode="center"
                source={
                  Object {
                    "testUri": "../../../src/assets/volt.png",
                  }
                }
                style={
                  Array [
                    Object {
                      "minHeight": 30,
                      "minWidth": 30,
                    },
                    Object {
                      "flex": 1,
                      "height": 90,
                      "width": 120,
                    },
                  ]
                }
                testID="image"
              />
            </View>
          </View>
          <View
            style={
              Object {
                "paddingHorizontal": 16,
              }
            }
          >
            <View>
              <View>
                <Text
                  style={
                    Array [
                      Object {
                        "color": undefined,
                      },
                      Object {
                        "lineHeight": 11,
                        "paddingBottom": 4,
                        "paddingTop": 20,
                      },
                    ]
                  }
                />
                <View
                  accessibilityState={
                    Object {
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "borderRadius": 10,
                      },
                      Array [
                        Object {
                          "alignItems": "center",
                          "flex": 1,
                          "flexDirection": "row",
                        },
                        Array [
                          Object {
                            "borderRadius": 10,
                            "paddingHorizontal": 15,
                            "paddingVertical": 8,
                          },
                          Object {
                            "backgroundColor": "rgba(231, 224, 236, 1)",
                          },
                          Array [
                            Object {},
                          ],
                        ],
                      ],
                      undefined,
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "rgba(73, 69, 79, 1)",
                          "fontSize": 20,
                        },
                        undefined,
                        Object {
                          "fontFamily": "Feather",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                  <TextInput
                    keyBoardType="email-address"
                    leftPart={
                      <_default
                        color="rgba(73, 69, 79, 1)"
                        name="mail"
                        size={20}
                      />
                    }
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    placeholder="undefined"
                    placeholderTextColor="rgba(73, 69, 79, 1)"
                    returnKeyType="next"
                    style={
                      Array [
                        Object {
                          "color": undefined,
                        },
                        Object {
                          "flex": 1,
                          "fontSize": 14,
                          "paddingHorizontal": 10,
                        },
                        undefined,
                      ]
                    }
                    value=""
                  />
                </View>
              </View>
              <View>
                <Text
                  style={
                    Array [
                      Object {
                        "color": undefined,
                      },
                      Object {
                        "lineHeight": 11,
                        "paddingBottom": 4,
                        "paddingTop": 20,
                      },
                    ]
                  }
                />
                <View
                  accessibilityState={
                    Object {
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "borderRadius": 10,
                      },
                      Array [
                        Object {
                          "alignItems": "center",
                          "flex": 1,
                          "flexDirection": "row",
                        },
                        Array [
                          Object {
                            "borderRadius": 10,
                            "paddingHorizontal": 15,
                            "paddingVertical": 8,
                          },
                          Object {
                            "backgroundColor": "rgba(231, 224, 236, 1)",
                          },
                          Array [
                            Object {},
                          ],
                        ],
                      ],
                      undefined,
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "rgba(73, 69, 79, 1)",
                          "fontSize": 20,
                        },
                        undefined,
                        Object {
                          "fontFamily": "Feather",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                  <TextInput
                    leftPart={
                      <_default
                        color="rgba(73, 69, 79, 1)"
                        name="lock"
                        size={20}
                      />
                    }
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    placeholder="undefined"
                    placeholderTextColor="rgba(73, 69, 79, 1)"
                    secureTextEntry={false}
                    style={
                      Array [
                        Object {
                          "color": undefined,
                        },
                        Object {
                          "flex": 1,
                          "fontSize": 14,
                          "paddingHorizontal": 10,
                        },
                        undefined,
                      ]
                    }
                    value=""
                  />
                </View>
              </View>
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "borderRadius": 10,
                    },
                    Array [
                      Object {
                        "borderRadius": 10,
                        "paddingVertical": 17,
                      },
                      Object {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                      },
                      Object {
                        "marginTop": 30,
                      },
                    ],
                    undefined,
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;
